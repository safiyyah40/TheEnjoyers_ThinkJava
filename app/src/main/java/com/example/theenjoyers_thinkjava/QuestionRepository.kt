package com.example.theenjoyers_thinkjava

object QuestionsRepository {
    fun getQuestions(category: String, count: Int = 25): List<Question> {
        val allQuestions = when (category) {
            "Variabel" -> getVariableQuestions()
            "Inheritance" -> getInheritanceQuestions()
            "Array" -> getArrayQuestions()
            "Looping" -> getLoopingQuestions()
            else -> emptyList()
        }
        if (count >= allQuestions.size) {
            return allQuestions.shuffled()
        }
        return allQuestions.shuffled().take(count)
    }

    // Daftar soal untuk kategori Variabel (private agar tidak diakses dari luar)
    private fun getVariableQuestions(): List<Question> {
        return listOf(
            Question(1, "Manakah cara yang benar untuk mendeklarasikan variabel integer dan memberinya nilai 10?", listOf("int myNum = 10;", "myNum int = 10;", "integer myNum = 10;", "var myNum = 10;"), 0),
            Question(2, "Tipe data mana yang digunakan untuk menyimpan nilai teks?", listOf("char", "String", "text", "varchar"), 1),
            Question(3, "Apa nilai default untuk variabel `boolean` yang tidak diinisialisasi?", listOf("true", "false", "0", "null"), 1),
            Question(4, "Manakah dari berikut ini yang merupakan tipe data primitif di Java?", listOf("String", "Array", "double", "Object"), 2),
            Question(5, "Keyword apa yang digunakan untuk membuat sebuah variabel yang nilainya tidak dapat diubah?", listOf("static", "const", "final", "constant"), 2),
            Question(6, "Apa output dari kode berikut?\n```java\nString name = \"Java\";\nname = \"Kotlin\";\nSystem.out.println(name);\n```", listOf("Java", "Kotlin", "Error kompilasi", "JavaKotlin"), 1),
            Question(7, "Apa output dari kode berikut?\n```java\nint x = 5;\ndouble y = x;\nSystem.out.println(y);\n```", listOf("5", "5.0", "Error kompilasi", "5.0d"), 1),
            Question(8, "Proses mengubah tipe data dari yang lebih besar ke yang lebih kecil disebut...", listOf("Widening Casting", "Automatic Casting", "Narrowing Casting", "Upcasting"), 2),
            Question(9, "Apa ukuran memori untuk tipe data `long`?", listOf("4 bytes", "8 bytes", "2 bytes", "16 bytes"), 1),
            Question(10, "Manakah yang benar untuk mendeklarasikan variabel `float`?", listOf("float x = 3.14;", "float x = 3.14f;", "float x = (float) 3.14L;", "float x = \"3.14\";"), 1),
            Question(11, "Variabel yang dideklarasikan di dalam sebuah metode disebut...", listOf("Instance variable", "Static variable", "Global variable", "Local variable"), 3),
            Question(12, "Apa output dari `System.out.println('a' + 'b');`?", listOf("ab", "195", "Error", "9798"), 1),
            Question(13, "Tipe data `char` digunakan untuk menyimpan...", listOf("Satu karakter Unicode", "Sebuah kata", "Angka desimal", "Nilai true/false"), 0),
            Question(14, "Manakah operator yang digunakan untuk menggabungkan string?", listOf("&", "&&", "+", "|"), 2),
            Question(15, "Berapa nilai maksimum yang bisa disimpan oleh tipe data `byte`?", listOf("127", "128", "255", "32767"), 0),
            Question(16, "Apa perbedaan utama antara tipe data primitif dan tipe referensi?", listOf("Tipe primitif lebih cepat.", "Tipe primitif menyimpan nilai aktual, tipe referensi menyimpan alamat memori.", "Tipe referensi hanya bisa untuk String.", "Tipe referensi tidak bisa bernilai `null`."), 1),
            Question(17, "Kode `double d = 100L;` adalah contoh dari...", listOf("Narrowing casting", "Widening casting", "Explicit casting", "Error kompilasi"), 1),
            Question(18, "Manakah yang akan menghasilkan `true`?", listOf("String s1 = \"hello\"; String s2 = \"hello\"; s1 == s2;", "String s1 = new String(\"hello\"); String s2 = \"hello\"; s1 == s2;", "String s1 = new String(\"hello\"); String s2 = new String(\"hello\"); s1 == s2;", "Semua salah"), 0),
            Question(19, "Variabel yang dimiliki oleh kelas itu sendiri (bukan oleh instance) disebut...", listOf("Instance variable", "Local variable", "Static variable", "Final variable"), 2),
            Question(20, "Apa output kode ini? `int x; System.out.println(x);`", listOf("0", "null", "Error kompilasi", "undefined"), 2),
            Question(21, "Tipe data apa yang paling tepat untuk menyimpan umur seseorang?", listOf("long", "float", "int", "double"), 2),
            Question(22, "Manakah sintaks yang benar untuk melakukan explicit casting?", listOf("int x = 9.78;", "int x = (int) 9.78;", "int x = int(9.78);", "int x = <int> 9.78;"), 1),
            Question(23, "Apa yang dimaksud dengan \"scope\" variabel?", listOf("Nilai dari variabel.", "Tipe data dari variabel.", "Wilayah di dalam kode di mana variabel tersebut bisa diakses.", "Nama dari variabel."), 2),
            Question(24, "Apa hasil dari `int z = 10 / 3;`?", listOf("3.33", "3.0", "3", "Error"), 2),
            Question(25, "Manakah yang akan memberikan nilai sisa dari pembagian?", listOf("/", "*", "%", "\\"), 2),
            Question(26, "`boolean isJavaFun = true;` adalah contoh deklarasi variabel dengan tipe data...", listOf("Boolean", "String", "Integer", "Character"), 0),
            Question(27, "Apa output dari kode ini?\n```java\nString txt = \"Hello\";\nSystem.out.println(txt.length());\n```", listOf("4", "5", "6", "Hello"), 1),
            Question(28, "Variabel `final` yang juga `static` dikenal sebagai...", listOf("Variabel instance", "Variabel referensi", "Konstanta", "Variabel volatil"), 2),
            Question(29, "Manakah cara penamaan variabel yang sesuai dengan konvensi Java (camelCase)?", listOf("first_name", "FirstName", "firstname", "firstName"), 3),
            Question(30, "Apa yang terjadi jika Anda mencoba memberikan nilai `double` ke variabel `int` tanpa casting?", listOf("Nilai desimal akan dihilangkan secara otomatis.", "Akan terjadi error kompilasi.", "Nilai akan dibulatkan.", "Akan terjadi `RuntimeException`."), 1),
            Question(31, "Manakah dari berikut ini yang merupakan tipe data referensi (non-primitif)?", listOf("int", "char", "String", "boolean"), 2),
            Question(32, "Apa yang akan terjadi jika Anda mendeklarasikan variabel lokal di dalam metode tanpa menginisialisasinya dan mencoba menggunakannya?", listOf("Nilainya akan 0", "Nilainya akan null", "Error kompilasi", "Akan melempar NullPointerException"), 2),
            Question(33, "Tipe data `short` memiliki ukuran...", listOf("8-bit", "16-bit", "32-bit", "64-bit"), 1),
            Question(34, "Konversi dari `int` ke `String` dapat dilakukan dengan metode...", listOf("String.valueOf()", "Integer.toString()", "Kedua A dan B benar", "Tidak bisa dilakukan"), 2),
            Question(35, "Apa itu 'literal' dalam konteks variabel?", listOf("Nama variabel", "Tipe data variabel", "Nilai tetap yang diberikan ke variabel", "Alamat memori variabel"), 2),
            Question(36, "Manakah penulisan konstanta (static final) yang sesuai konvensi Java?", listOf("max_value", "maxValue", "MAX_VALUE", "MaxValue"), 2),
            Question(37, "Apa output dari `System.out.println(10 / 4.0);`?", listOf("2", "2.0", "2.5", "Error"), 2),
            Question(38, "Variabel yang dideklarasikan dengan `var` (sejak Java 10) disebut...", listOf("Variant Type", "Local-Variable Type Inference", "Dynamic Type", "Volatile Type"), 1),
            Question(39, "Apa nilai default untuk variabel instance bertipe `Object`?", listOf("Objek kosong", "Error", "undefined", "null"), 3),
            Question(40, "Manakah dari berikut ini yang akan menyimpan nilai Unicode 'A'?", listOf("char c = 65;", "char c = 'A';", "Keduanya benar", "Keduanya salah"), 2),
            Question(41, "Operator `++` yang ditempatkan setelah variabel (contoh: `x++`) disebut...", listOf("Prefix Increment", "Postfix Increment", "Pre-increment", "Step-up operator"), 1),
            Question(42, "Berapa jangkauan nilai untuk tipe data `int`?", listOf("-128 hingga 127", "-32,768 hingga 32,767", "-2^31 hingga 2^31-1", "-2^63 hingga 2^63-1"), 2),
            Question(43, "Untuk membandingkan isi dari dua objek String, metode yang paling tepat adalah...", listOf("==", ".equals()", ".compare()", ".match()"), 1),
            Question(44, "Apa yang terjadi jika variabel `final` tidak diinisialisasi saat deklarasi?", listOf("Nilainya akan null", "Bisa diinisialisasi sekali nanti (misal di konstruktor)", "Akan terjadi error kompilasi", "B dan C tergantung konteks"), 3),
            Question(45, "Sebuah variabel yang dideklarasikan di luar metode apa pun tetapi di dalam kelas disebut...", listOf("Variabel lokal", "Variabel global", "Variabel instance", "Variabel parameter"), 2),
            Question(46, "Apa hasil dari `\"10\" + 20`?", listOf("30", "\"1020\"", "Error kompilasi", "NumberFormatException"), 1),
            Question(47, "Tipe data `boolean` hanya dapat memiliki dua nilai, yaitu...", listOf("0 dan 1", "true dan false", "yes dan no", "T dan F"), 1),
            Question(48, "Apa fungsi `\n` dalam sebuah String literal?", listOf("Membuat tab", "Membuat baris baru", "Menghapus karakter sebelumnya", "Menambahkan kutip ganda"), 1),
            Question(49, "Manakah yang merupakan kata kunci (keyword) yang dicadangkan di Java?", listOf("string", "main", "unsigned", "transient"), 3),
            Question(50, "Apa perbedaan antara `char` dan `String`?", listOf("Tidak ada perbedaan", "`char` untuk satu karakter, `String` untuk rangkaian karakter", "`String` lebih cepat", "`char` adalah objek, `String` adalah primitif"), 1)
        )
    }

    // Daftar soal untuk kategori Inheritance
    private fun getInheritanceQuestions(): List<Question> {
        return listOf(
            Question(1, "Keyword apa yang digunakan untuk mewarisi sifat dari sebuah kelas?", listOf("implements", "inherits", "extends", "super"), 2),
            Question(2, "Sebuah kelas yang mewarisi dari kelas lain disebut...", listOf("Superclass", "Parent class", "Base class", "Subclass"), 3),
            Question(3, "Keyword apa yang digunakan untuk mengakses anggota dari superclass?", listOf("this", "super", "parent", "base"), 1),
            Question(4, "Di Java, sebuah kelas bisa mewarisi dari...", listOf("Banyak kelas", "Hanya satu kelas", "Hanya kelas `abstract`", "Hanya kelas `final`"), 1),
            Question(5, "Konsep di mana sebuah objek dapat memiliki banyak bentuk (misalnya, objek `Dog` juga merupakan objek `Animal`) disebut...", listOf("Encapsulation", "Polymorphism", "Abstraction", "Inheritance"), 1),
            Question(6, "Anotasi apa yang digunakan untuk menandakan bahwa sebuah metode menimpa (override) metode dari superclass?", listOf("@Override", "@Overload", "@Super", "@Inherit"), 0),
            Question(7, "Jika sebuah metode di superclass dideklarasikan sebagai `final`, apa yang terjadi?", listOf("Metode tersebut harus di-override.", "Metode tersebut tidak bisa di-override.", "Metode tersebut hanya bisa diakses oleh subclass.", "Metode tersebut menjadi `private`."), 1),
            Question(8, "Apa yang terjadi jika sebuah kelas dideklarasikan sebagai `final`?", listOf("Kelas tersebut tidak bisa memiliki subclass.", "Kelas tersebut tidak bisa membuat objek.", "Semua metodenya menjadi `final`.", "Semua variabelnya menjadi `final`."), 0),
            Question(9, "Manakah pernyataan yang benar mengenai konstruktor dalam inheritance?", listOf("Konstruktor tidak diwariskan.", "Subclass harus memanggil konstruktor superclass secara eksplisit menggunakan `super()`.", "Jika tidak ada panggilan `super()`, Java akan memanggil konstruktor default superclass secara implisit.", "Semua benar."), 3),
            Question(10, "Operator apa yang digunakan untuk memeriksa apakah sebuah objek adalah instance dari kelas tertentu?", listOf("isinstance", "typeof", "instanceof", "is"), 2),
            Question(11, "Apa itu kelas `abstract`?", listOf("Kelas yang tidak bisa membuat objek.", "Kelas yang semua metodenya `abstract`.", "Kelas yang hanya berisi konstanta.", "Kelas yang tidak bisa diwarisi."), 0),
            Question(12, "Jika metode di subclass memiliki nama dan parameter yang sama dengan metode di superclass, ini disebut...", listOf("Method Overloading", "Method Overriding", "Method Hiding", "Method Duplication"), 1),
            Question(13, "Manakah access modifier yang membuat anggota kelas hanya bisa diakses oleh kelas itu sendiri, subclass, dan kelas dalam package yang sama?", listOf("public", "private", "protected", "default (tanpa modifier)"), 2),
            Question(14, "Apa output dari kode berikut?\n```java\nclass A { void print() { System.out.print(\"A\"); } }\nclass B extends A { void print() { System.out.print(\"B\"); } }\nA obj = new B();\nobj.print();\n```", listOf("A", "B", "Error kompilasi", "AB"), 1),
            Question(15, "Hubungan pewarisan sering disebut sebagai hubungan...", listOf("\"has-a\"", "\"is-a\"", "\"uses-a\"", "\"part-of\""), 1),
            Question(16, "Manakah yang benar tentang metode `abstract`?", listOf("Tidak memiliki isi (body).", "Harus diimplementasikan oleh subclass non-abstract pertama.", "Hanya bisa ada di dalam kelas `abstract`.", "Semua benar."), 3),
            Question(17, "Apa tujuan utama dari pewarisan (inheritance)?", listOf("Menyembunyikan data", "Mengurangi duplikasi kode dan meningkatkan reusability", "Mengelompokkan data dan metode", "Membuat kode lebih aman"), 1),
            Question(18, "Manakah yang akan menyebabkan error kompilasi?", listOf("class A extends B {} class B {}", "class A {} class B extends A {}", "final class A {} class B extends A {}", "abstract class A {} class B extends A { // implementasi }"), 2),
            Question(19, "`super()` harus menjadi...", listOf("Pernyataan terakhir di dalam konstruktor subclass.", "Pernyataan pertama di dalam konstruktor subclass.", "Bisa diletakkan di mana saja.", "Tidak wajib ada."), 1),
            Question(20, "Kelas `Object` di Java adalah...", listOf("Superclass dari semua kelas di Java.", "Kelas `final`.", "Kelas `abstract`.", "Interface utama."), 0),
            Question(21, "`protected` modifier memberikan akses yang lebih luas daripada...", listOf("public", "default", "private", "Tidak ada"), 2),
            Question(22, "Jika sebuah subclass tidak menyediakan implementasi untuk metode `abstract` dari superclassnya, maka subclass tersebut...", listOf("Akan mengalami error kompilasi.", "Harus dideklarasikan sebagai `abstract`.", "Tidak dapat membuat objek.", "B dan C benar."), 3),
            Question(23, "Manakah yang bukan fitur dari Object-Oriented Programming (OOP)?", listOf("Inheritance", "Polymorphism", "Procedural Execution", "Encapsulation"), 2),
            Question(24, "Perhatikan kode: `Animal a = new Dog();`. Ini adalah contoh dari...", listOf("Downcasting", "Upcasting", "Autoboxing", "Unboxing"), 1),
            Question(25, "Apa yang terjadi jika subclass dan superclass memiliki field (variabel) dengan nama yang sama?", listOf("Field di superclass akan di-override.", "Akan terjadi error kompilasi.", "Subclass akan memiliki dua field dengan nama tersebut.", "Field di subclass akan \"menyembunyikan\" (hide) field di superclass."), 3),
            Question(26, "Sebuah `interface` di Java dapat mewarisi dari...", listOf("Hanya satu `interface` lain.", "Banyak `interface` lain.", "Sebuah kelas `abstract`.", "Kelas `Object`."), 1),
            Question(27, "`class Car extends Vehicle {}`. Manakah yang benar?", listOf("`Car` adalah superclass.", "`Vehicle` adalah subclass.", "`Car` memiliki hubungan \"is-a\" dengan `Vehicle`.", "`Vehicle` memiliki hubungan \"has-a\" dengan `Car`."), 2),
            Question(28, "Kapan kita menggunakan `super.methodName()`?", listOf("Untuk memanggil metode dengan nama yang sama dari kelas saat ini.", "Untuk memanggil konstruktor dari superclass.", "Untuk memanggil metode dari superclass yang telah di-override di subclass.", "Untuk membuat instance dari superclass."), 2),
            Question(29, "Metode `private` di superclass...", listOf("Dapat di-override oleh subclass.", "Tidak dapat diakses dan tidak dapat di-override oleh subclass.", "Diwariskan dan menjadi `public` di subclass.", "Harus diimplementasikan di subclass."), 1),
            Question(30, "Multiple inheritance (mewarisi dari lebih dari satu kelas) tidak didukung di Java untuk kelas karena...", listOf("Terlalu rumit untuk diimplementasikan.", "Menyebabkan \"Diamond Problem\".", "Tidak efisien.", "Semua jawaban benar."), 1),
            Question(31, "Konsep dimana subclass menyediakan implementasi spesifik untuk metode yang sudah ada di superclass disebut...", listOf("Overloading", "Overriding", "Hiding", "Shadowing"), 1),
            Question(32, "Jika sebuah kelas mengimplementasikan sebuah interface, ia harus...", listOf("Mewarisi semua variabel interface", "Menyediakan implementasi untuk semua metode abstract di interface", "Menjadi kelas final", "Memanggil konstruktor interface"), 1),
            Question(33, "Apa itu 'IS-A relationship' dalam OOP?", listOf("Hubungan komposisi", "Hubungan agregasi", "Hubungan pewarisan (inheritance)", "Hubungan asosiasi"), 2),
            Question(34, "Manakah yang benar tentang pewarisan dan konstruktor?", listOf("Konstruktor superclass tidak pernah dipanggil", "Panggilan `super()` adalah opsional", "Konstruktor subclass selalu dieksekusi sebelum konstruktor superclass", "Konstruktor superclass selalu dieksekusi sebelum konstruktor subclass"), 3),
            Question(35, "Sebuah metode `static` di superclass...", listOf("Bisa di-override oleh subclass", "Tidak bisa di-override, tapi bisa di-'hide' (re-declared)", "Secara otomatis menjadi private di subclass", "Harus dideklarasikan ulang sebagai non-static"), 1),
            Question(36, "Manakah yang merupakan contoh 'HAS-A relationship'?", listOf("Mobil adalah Kendaraan", "Anjing adalah Hewan", "Mobil memiliki Mesin", "Manajer adalah Karyawan"), 2),
            Question(37, "Sebuah interface dapat berisi...", listOf("Hanya metode abstract", "Hanya variabel final", "Metode abstract, metode default, metode static, dan konstanta", "Hanya konstruktor"), 2),
            Question(38, "Apa tujuan dari 'Upcasting' (misal: `Animal a = new Dog();`)?", listOf("Mengakses metode spesifik milik Dog", "Mencapai polimorfisme", "Mengurangi penggunaan memori", "Mempercepat eksekusi"), 1),
            Question(39, "Keyword `this` merujuk pada...", listOf("Instance dari superclass", "Instance dari kelas saat ini", "Kelas itu sendiri", "Objek null"), 1),
            Question(40, "Apa itu 'downcasting'?", listOf("Mengubah tipe dari superclass ke subclass", "Mengubah tipe dari subclass ke superclass", "Selalu aman dilakukan", "Tidak memerlukan casting eksplisit"), 0),
            Question(41, "Sebuah kelas `abstract` bisa memiliki...", listOf("Hanya metode abstract", "Hanya metode non-abstract", "Campuran metode abstract dan non-abstract", "Tidak bisa memiliki metode sama sekali"), 2),
            Question(42, "Mengapa Java tidak mendukung multiple inheritance untuk kelas?", listOf("Untuk menghindari Diamond Problem", "Karena terlalu kompleks", "Karena mengurangi performa", "Semua jawaban benar"), 0),
            Question(43, "Semua kelas di Java secara implisit adalah turunan dari kelas...", listOf("`Main`", "`System`", "`Object`", "`Class`"), 2),
            Question(44, "Modifier `protected` membuat sebuah anggota dapat diakses dari...", listOf("Hanya kelas itu sendiri", "Kelas dalam package yang sama dan subclass", "Di mana saja", "Hanya subclass di package berbeda"), 1),
            Question(45, "Apa perbedaan utama antara kelas `abstract` dan `interface`?", listOf("Interface bisa memiliki implementasi, abstract class tidak", "Abstract class bisa memiliki konstruktor, interface tidak", "Sebuah kelas bisa mewarisi banyak abstract class", "Tidak ada perbedaan"), 1),
            Question(46, "Saat melakukan override, metode di subclass tidak boleh...", listOf("Memiliki nama yang sama", "Memiliki parameter yang sama", "Memiliki access modifier yang lebih ketat (misal dari public ke private)", "Mengembalikan tipe yang sama"), 2),
            Question(47, "Manakah yang benar tentang kelas `final`?", listOf("Bisa diwariskan", "Tidak bisa diwariskan", "Bisa menjadi superclass", "Harus memiliki metode final"), 1),
            Question(48, "Polimorfisme memungkinkan kita untuk...", listOf("Menulis kode yang lebih kaku", "Memperlakukan objek dari kelas berbeda seolah-olah sama", "Menyembunyikan detail implementasi", "Mengurangi jumlah kelas"), 1),
            Question(49, "Apa yang akan terjadi jika konstruktor superclass memiliki parameter?", listOf("Subclass tidak bisa dibuat", "Subclass harus memanggil `super()` dengan argumen yang sesuai", "Java akan memanggilnya secara otomatis", "Akan terjadi error kompilasi"), 1),
            Question(50, "Metode `equals()` dan `hashCode()` berasal dari kelas...", listOf("`String`", "`System`", "`Math`", "`Object`"), 3)
        )
    }

    // Daftar soal untuk kategori Array
    private fun getArrayQuestions(): List<Question> {
        return listOf(
            Question(1, "Manakah sintaks yang benar untuk mendeklarasikan array integer satu dimensi di Java?", listOf("int array() = new int[5];", "array int[] = new int[5];", "int[] array = new int[5];", "int array = [5];"), 2),
            Question(2, "Apa output dari kode berikut? `int[] nums = {10, 20, 30, 40}; System.out.println(nums[2]);`", listOf("10", "20", "30", "40"), 2),
            Question(3, "Bagaimana cara mendapatkan jumlah elemen dalam sebuah array bernama `data`?", listOf("data.size()", "data.length()", "data.length", "data.capacity"), 2),
            Question(4, "Indeks pertama dalam sebuah array di Java dimulai dari...", listOf("1", "0", "-1", "Ditentukan saat deklarasi"), 1),
            Question(5, "Apa yang akan terjadi jika Anda mencoba mengakses elemen di luar batas array?", listOf("NullPointerException", "ArrayIndexOutOfBoundsException", "NumberFormatException", "Kode tidak akan terkompilasi"), 1),
            Question(6, "Manakah cara yang **salah** untuk menginisialisasi sebuah array?", listOf("int[] arr = new int[3];", "int[] arr = new int[]{1, 2, 3};", "int[] arr = {1, 2, 3};", "int[] arr = new int[3]{1, 2, 3};"), 3),
            Question(7, "Apa nilai default dari elemen dalam array `int` yang baru dibuat?", listOf("1", "null", "0", "Tergantung pada memori"), 2),
            Question(8, "Apa nilai default dari elemen dalam array `String` yang baru dibuat?", listOf("\"\" (String kosong)", "null", "     (spasi)", "undefined"), 1),
            Question(9, "Perhatikan kode: `String[] fruits = {\"Apple\", \"Banana\", \"Cherry\"};`. Ekspresi `fruits.length` akan menghasilkan nilai...", listOf("2", "3", "4", "Error"), 1),
            Question(10, "Manakah sintaks yang benar untuk mendeklarasikan array 2D (dua dimensi)?", listOf("int[][] matrix = new int[3][3];", "int matrix[3][3] = new int[][];", "int[3][3] matrix = new int[][];", "int[,] matrix = new int[3,3];"), 0),
            Question(11, "Apa output dari kode berikut? `int[][] matrix = {{1, 2}, {3, 4}}; System.out.println(matrix[1][0]);`", listOf("1", "2", "3", "4"), 2),
            Question(12, "Manakah *loop* yang paling cocok untuk mengakses setiap elemen array tanpa memerlukan indeks?", listOf("for loop", "while loop", "do-while loop", "enhanced for loop (for-each)"), 3),
            Question(13, "Apa hasil dari kode ini? `int[] a = {1, 2, 3}; int[] b = {1, 2, 3}; System.out.println(a == b);`", listOf("true", "false", "1", "Error kompilasi"), 1),
            Question(14, "Metode dari class `java.util.Arrays` yang digunakan untuk membandingkan isi dua array adalah...", listOf("compare()", "match()", "equals()", "isEqual()"), 2),
            Question(15, "Kata kunci `final` pada deklarasi array, seperti `final int[] arr = {1, 2};`, berarti...", listOf("Elemen di dalam array tidak dapat diubah.", "Ukuran array tidak dapat diubah.", "Variabel referensi `arr` tidak dapat menunjuk ke array lain.", "Array menjadi *read-only*."), 2),
            Question(16, "Bagaimana cara mencetak semua isi array dengan format yang mudah dibaca?", listOf("System.out.println(arr);", "System.out.println(Arrays.print(arr));", "System.out.println(Arrays.toString(arr));", "Menggunakan `for` loop secara manual."), 2),
            Question(17, "Apa yang dimaksud dengan \"anonymous array\" (array anonim)?", listOf("Array yang tidak memiliki nama variabel.", "Array yang ukurannya nol.", "Array yang elemennya tidak dapat diakses.", "Array yang dibuat langsung saat dipassing ke sebuah metode."), 3),
            Question(18, "Perhatikan kode: `int[] numbers = new int[5];`. Pernyataan `numbers[5] = 10;` akan menyebabkan...", listOf("Elemen terakhir diisi dengan 10.", "Error saat kompilasi.", "ArrayIndexOutOfBoundsException.", "NullPointerException."), 2),
            Question(19, "Manakah pernyataan yang benar tentang array di Java?", listOf("Ukuran array dapat diubah setelah dibuat.", "Array hanya dapat menyimpan tipe data primitif.", "Array adalah objek di Java.", "Array disimpan di *stack memory*."), 2),
            Question(20, "Apa output dari kode berikut? `int[] arr = {5, 10, 15}; for (int i = 0; i <= arr.length; i++) { System.out.print(arr[i] + \" \"); }`", listOf("5 10 15", "5 10 15 diikuti ArrayIndexOutOfBoundsException", "5 10", "Error saat kompilasi"), 1),
            Question(21, "Bagaimana cara mendapatkan jumlah baris dari array 2D bernama `matrix`?", listOf("matrix.length", "matrix[0].length", "matrix.rows()", "matrix.size()"), 0),
            Question(22, "Jika `int[][] matrix = new int[3][4];`, bagaimana cara mendapatkan jumlah kolom pada baris pertama?", listOf("matrix.length", "matrix[0].length", "matrix[1].length", "matrix.columns"), 1),
            Question(23, "Manakah metode dari class `Arrays` untuk mengurutkan array?", listOf("order()", "sort()", "arrange()", "sequence()"), 1),
            Question(24, "Apa yang akan dicetak oleh kode berikut? `char[] chars = {'J', 'a', 'v', 'a'}; String str = new String(chars); System.out.println(str);`", listOf("[J, a, v, a]", "J a v a", "Java", "Alamat memori dari array `chars`"), 2),
            Question(25, "Ketika sebuah array di-passing sebagai argumen ke sebuah metode, apa yang sebenarnya di-passing?", listOf("Salinan dari setiap elemen array.", "Referensi (alamat memori) ke array tersebut.", "Ukuran dari array.", "Elemen pertama dari array."), 1),
            Question(26, "Manakah cara yang valid untuk membuat salinan dari sebuah array `source` ke array `destination`?", listOf("destination = source;", "destination = Arrays.copy(source);", "System.arraycopy(source, 0, destination, 0, source.length);", "destination.copyFrom(source);"), 2),
            Question(27, "Apa itu \"jagged array\" di Java?", listOf("Array yang elemennya tidak berurutan.", "Array 2D di mana panjang setiap baris (array dalam) bisa berbeda.", "Array yang berisi tipe data campuran.", "Array yang tidak dapat diubah ukurannya."), 1),
            Question(28, "Kode `int[] values = new int[]{10, 20, 30};` adalah contoh dari...", listOf("Deklarasi array yang salah.", "Array anonim.", "Deklarasi dan inisialisasi array.", "Jagged array."), 2),
            Question(29, "Apa hasil dari kode ini? `int[] x = {0}; x[0] = x[0]++; System.out.println(x[0]);`", listOf("0", "1", "2", "Error"), 0),
            Question(30, "Mana yang paling tepat untuk mengisi semua elemen array `arr` dengan nilai 10?", listOf("for (int i=0; i<arr.length; i++) { arr[i] = 10; }", "Arrays.fill(arr, 10);", "arr.fill(10);", "Kedua A dan B benar dan efisien."), 3),
            Question(31, "Apa yang terjadi saat kita melakukan `int[] b = a;` di mana `a` adalah sebuah array?", listOf("Array `a` disalin ke `b`", "`b` menjadi referensi baru ke objek array yang sama dengan `a`", "Setiap elemen `a` disalin ke `b`", "Akan terjadi error"), 1),
            Question(32, "Metode `Arrays.binarySearch()` memerlukan array yang...", listOf("Acak", "Sudah terurut (sorted)", "Memiliki elemen unik", "Bertipe String"), 1),
            Question(33, "Bagaimana cara mendeklarasikan dan menginisialisasi array String dengan 3 elemen?", listOf("String[] s = new String(3);", "String s[3];", "String[] s = new String[3];", "String s = new String[3];"), 2),
            Question(34, "Array di Java memiliki ukuran yang...", listOf("Dinamis, bisa berubah-ubah", "Tetap (fixed) setelah dibuat", "Tidak terbatas", "Ditentukan oleh jumlah elemen yang diisi"), 1),
            Question(35, "Apa output dari `new int[]{1, 2, 3}.length`?", listOf("2", "3", "Error", "0"), 1),
            Question(36, "Manakah yang akan melempar `NullPointerException`?", listOf("int[] a = new int[5]; a[0]=1;", "int[] a = null; System.out.println(a.length);", "String[] s = new String[1]; System.out.println(s[0]);", "Semua salah"), 1),
            Question(37, "Kelas `java.util.Arrays` menyediakan metode-metode...", listOf("static", "instance", "abstract", "final"), 0),
            Question(38, "Untuk menyalin sebagian dari sebuah array ke array lain, metode yang paling efisien adalah...", listOf("for loop", "`Arrays.copyOfRange()`", "`clone()`", "`Arrays.fill()`"), 1),
            Question(39, "Elemen-elemen dari array 2D `int[3][5]` tersimpan di memori sebagai...", listOf("Matriks 3x5", "Tiga array dengan masing-masing 5 elemen", "Array tunggal berisi 15 elemen", "Tidak dapat dipastikan"), 1),
            Question(40, "Apa itu `varargs` (variable arguments) di Java?", listOf("Cara mendeklarasikan variabel global", "Memungkinkan sebuah metode menerima jumlah argumen yang bervariasi", "Tipe data khusus", "Sebuah loop"), 1),
            Question(41, "Sintaks `varargs` untuk parameter metode adalah...", listOf("`String... names`", "`String[] names`", "`String* names`", "`String& names`"), 0),
            Question(42, "Metode `array.clone()` melakukan...", listOf("Shallow copy", "Deep copy", "Tidak ada copy, hanya referensi", "Memerlukan casting"), 0),
            Question(43, "Apa outputnya? `int[] arr = {1}; System.out.println(arr);`", listOf("1", "[1]", "Alamat memori dari array", "Error"), 2),
            Question(44, "Jika sebuah metode menerima `int[]` sebagai argumen, perubahan yang dibuat pada elemen array di dalam metode...", listOf("Tidak akan memengaruhi array asli", "Akan memengaruhi array asli", "Hanya berlaku lokal", "Menyebabkan error"), 1),
            Question(45, "Manakah cara yang benar untuk mengiterasi array 2D `matrix`?", listOf("Satu for-each loop", "Satu for loop biasa", "Nested for loop (dua loop)", "Menggunakan `Arrays.toString()`"), 2),
            Question(46, "`System.arraycopy()` lebih cepat daripada for-loop karena...", listOf("Dijalankan oleh JVM secara native", "Menggunakan lebih sedikit memori", "Tidak memeriksa batas array", "Hanya untuk array kecil"), 0),
            Question(47, "Array yang semua elemennya adalah `null` akan memiliki `length`...", listOf("0", "Sama dengan ukuran yang dideklarasikan", "`null`", "Error"), 1),
            Question(48, "Apa perbedaan antara `array.length` dan `string.length()`?", listOf("Tidak ada", "`array.length` adalah properti, `string.length()` adalah metode", "`array.length` lebih cepat", "Keduanya adalah metode"), 1),
            Question(49, "Array kovarian berarti...", listOf("`Object[]` bisa menampung `String[]`", "`String[]` bisa menampung `Object[]`", "Array tidak bisa diwariskan", "Semua array adalah final"), 0),
            Question(50, "Untuk membuat array yang ukurannya bisa bertambah dan berkurang, sebaiknya gunakan...", listOf("`int[]`", "`Vector`", "`ArrayList`", "B dan C benar"), 3)
        )
    }

    // Daftar soal untuk kategori Looping
    private fun getLoopingQuestions(): List<Question> {
        return listOf(
            Question(1, "Loop mana yang akan selalu dieksekusi setidaknya satu kali?", listOf("for", "while", "do-while", "for-each"), 2),
            Question(2, "Apa output dari kode berikut?\n```java\nfor (int i = 0; i < 3; i++) {\n    System.out.print(i);\n}\n```", listOf("012", "123", "0123", "12"), 0),
            Question(3, "Keyword apa yang digunakan untuk keluar sepenuhnya dari sebuah loop?", listOf("continue", "return", "exit", "break"), 3),
            Question(4, "Keyword apa yang digunakan untuk melewati iterasi saat ini dan melanjutkan ke iterasi berikutnya?", listOf("skip", "continue", "next", "break"), 1),
            Question(5, "Apa output dari kode berikut?\n```java\nint i = 5;\nwhile (i > 3) {\n    System.out.print(i);\n    i--;\n}\n```", listOf("54", "543", "43", "5"), 1),
            Question(6, "Manakah loop yang akan menjadi *infinite loop* (loop tak terbatas)?", listOf("for (int i = 0; i < 10; i++) {}", "for (int i = 10; i > 0; i--) {}", "for (int i = 0; i < 10; i--) {}", "for ( ; ; ) {}"), 3),
            Question(7, "Apa output dari kode berikut?\n```java\nfor (int i = 1; i <= 5; i++) {\n    if (i == 3) {\n        continue;\n    }\n    System.out.print(i);\n}\n```", listOf("1245", "12345", "12", "123"), 0),
            Question(8, "Sintaks `for-each` loop yang benar untuk array `int[] numbers` adalah...", listOf("for (int n in numbers) {}", "for (int n : numbers) {}", "for (n : numbers) {}", "for each (int n in numbers) {}"), 1),
            Question(9, "Apa output kode berikut?\n```java\nint count = 0;\ndo {\n    System.out.print(count);\n    count++;\n} while (count < 0);\n```", listOf("0", "1", "Tidak ada output", "01"), 0),
            Question(10, "Berapa kali \"Hello\" akan dicetak?\n```java\nfor (int i = 0; i < 2; i++) {\n    for (int j = 0; j < 3; j++) {\n        System.out.println(\"Hello\");\n    }\n}\n```", listOf("2 kali", "3 kali", "5 kali", "6 kali"), 3),
            Question(11, "Bagian mana dari `for` loop yang dieksekusi hanya sekali?", listOf("Kondisi", "Inisialisasi", "Iterasi (increment/decrement)", "Badan loop"), 1),
            Question(12, "Apa output kode ini?\n```java\nint x = 0;\nwhile (x < 2) {\n    System.out.print(\"x\");\n    x++;\n}\n```", listOf("x", "xx", "xxx", "Infinite loop"), 1),
            Question(13, "Apa output kode ini?\n```java\nfor (int i = 5; i >= 1; i--) {\n    if (i == 2) {\n        break;\n    }\n    System.out.print(i);\n}\n```", listOf("543", "5431", "5432", "54"), 0),
            Question(14, "`for-each` loop tidak bisa digunakan jika Anda perlu...", listOf("Mengakses setiap elemen.", "Menghitung jumlah total elemen.", "Mengubah nilai elemen di dalam array.", "Mencetak setiap elemen."), 2),
            Question(15, "Manakah yang setara dengan `for (int i = 0; i < 5; i++) {}`?", listOf("int i = 0; while(i <= 5) { i++; }", "int i = 0; while(i < 5) { i++; }", "int i = 1; while(i < 5) { i++; }", "int i = 0; do { i++; } while(i < 5);"), 1),
            Question(16, "Apa outputnya?\n```java\nint i = 10;\ndo {\n    System.out.print(i);\n    i--;\n} while (i > 10);\n```", listOf("Tidak ada output", "10", "11", "9"), 1),
            Question(17, "Loop `while(true)` adalah contoh dari...", listOf("Loop yang salah", "Loop kondisional", "Infinite loop yang disengaja", "Loop yang hanya berjalan sekali"), 2),
            Question(18, "Dalam `for (A; B; C)`, bagian `B` adalah...", listOf("Inisialisasi", "Pernyataan iterasi", "Badan loop", "Kondisi terminasi"), 3),
            Question(19, "Apa output kode ini?\n```java\nint i = 0;\nfor (System.out.print(\"A\"); i < 1; System.out.print(\"B\")) {\n    System.out.print(\"C\");\n    i++;\n}\n```", listOf("ACB", "ABC", "AC", "A"), 0),
            Question(20, "Untuk mengiterasi mundur melalui array `int[] arr`, loop yang benar adalah...", listOf("for (int i = 0; i < arr.length; i++)", "for (int i = arr.length; i >= 0; i--)", "for (int i = arr.length - 1; i >= 0; i--)", "for (int i = 1; i <= arr.length; i++)"), 2),
            Question(21, "`for (int num : numbers)` akan mengalami error jika `numbers`...", listOf("adalah array `int`.", "adalah array `String`.", "adalah `null`.", "adalah array kosong."), 2),
            Question(22, "Apa hasil dari kode ini?\n```java\nint sum = 0;\nfor (int i = 1; i <= 3; i++) {\n    sum += i;\n}\nSystem.out.println(sum);\n```", listOf("3", "5", "6", "7"), 2),
            Question(23, "Berapa kali loop ini berjalan? `for(int i = -5; i < 5; i++) {}`", listOf("5 kali", "9 kali", "10 kali", "11 kali"), 2),
            Question(24, "`break` di dalam nested loop akan...", listOf("Menghentikan semua loop.", "Menghentikan hanya loop terdalam.", "Menghentikan hanya loop terluar.", "Menyebabkan error."), 1),
            Question(25, "Apa output dari kode ini?\n```java\nint x = 1;\nwhile(x <= 3) {\n    System.out.print(x);\n    x += 2;\n}\n```", listOf("123", "13", "135", "1"), 1),
            Question(26, "`while` loop adalah...", listOf("Pre-test loop", "Post-test loop", "Entry-controlled loop", "A dan C benar"), 3),
            Question(27, "Apa yang terjadi jika kondisi `while` loop awalnya `false`?", listOf("Loop berjalan satu kali.", "Badan loop tidak akan pernah dieksekusi.", "Terjadi error.", "Loop menjadi tak terbatas."), 1),
            Question(28, "Kapan `for-each` loop menjadi pilihan yang lebih baik daripada `for` loop biasa?", listOf("Saat perlu mengubah elemen array.", "Saat perlu mengakses elemen secara terbalik.", "Saat hanya perlu membaca setiap elemen tanpa mempedulikan indeksnya.", "Saat perlu menghapus elemen dari koleksi."), 2),
            Question(29, "Apa output kode ini?\n```java\nString[] letters = {\"A\", \"B\", \"C\"};\nfor (String s : letters) {\n    System.out.print(s);\n}\n```", listOf("A B C", "ABC", "[A, B, C]", "Error"), 1),
            Question(30, "Mana yang akan mencetak angka genap dari 0 hingga 8?", listOf("for (int i = 0; i < 10; i += 2) { System.out.print(i); }", "for (int i = 0; i < 9; i++) { if(i%2==0) System.out.print(i); }", "for (int i = 0; i <= 8; i += 2) { System.out.print(i); }", "Semua benar."), 3),
            Question(31, "Bagian inisialisasi pada `for` loop bersifat...", listOf("Wajib", "Opsional", "Harus berupa deklarasi variabel", "Hanya untuk integer"), 1),
            Question(32, "Apa yang terjadi jika kondisi `while` loop tidak pernah menjadi `false`?", listOf("Loop berhenti setelah satu iterasi", "Terjadi error kompilasi", "Terjadi infinite loop", "Aplikasi akan crash"), 2),
            Question(33, "`Labeled break` digunakan untuk...", listOf("Keluar dari loop terdalam", "Keluar dari loop terluar (atau loop tertentu)", "Memberi nama pada loop", "Hanya untuk `switch`"), 1),
            Question(34, "Loop `for-each` dapat digunakan untuk mengiterasi...", listOf("Hanya array", "Hanya `ArrayList`", "Objek apa pun yang mengimplementasikan `Iterable`", "Hanya angka"), 2),
            Question(35, "Berapa kali 'Loop' akan dicetak? `for(int i=10; i<10; i++){...}`", listOf("10 kali", "1 kali", "0 kali", "Infinite loop"), 2),
            Question(36, "Manakah yang merupakan penggunaan `do-while` loop yang paling umum?", listOf("Iterasi array", "Memvalidasi input pengguna setidaknya sekali", "Menghitung mundur", "Loop tak terbatas"), 1),
            Question(37, "Apa outputnya? `int i=0; while(i++ < 2) { System.out.print(i); }`", listOf("01", "12", "012", "1"), 1),
            Question(38, "Perbedaan utama antara `while` dan `do-while` adalah...", listOf("Sintaksnya", "Kapan kondisi diperiksa", "`do-while` lebih cepat", "Tidak ada perbedaan fungsional"), 1),
            Question(39, "Apa outputnya? `for(int i=0; i<3; ++i) { System.out.print(i); }`", listOf("123", "012", "01", "12"), 1),
            Question(40, "Dalam `for-each` loop, Anda tidak bisa...", listOf("Mengakses elemen", "Mengetahui indeks elemen saat ini (tanpa variabel counter tambahan)", "Mencetak elemen", "Mengiterasi koleksi"), 1),
            Question(41, "Kondisi `for(;;)` akan menciptakan...", listOf("Loop yang berjalan sekali", "Error kompilasi", "Loop tak terbatas", "Loop yang tidak berjalan sama sekali"), 2),
            Question(42, "Apa outputnya? `int a=5, b=1; while(a>b) { System.out.print(a); a--; }`", listOf("54321", "5432", "543", "5"), 1),
            Question(43, "`continue` statement menyebabkan...", listOf("Loop berhenti total", "Eksekusi melompat ke akhir loop dan memulai iterasi berikutnya", "Eksekusi melompat ke awal metode", "Program berhenti"), 1),
            Question(44, "Manakah yang BUKAN jenis loop di Java?", listOf("for", "while", "repeat-until", "do-while"), 2),
            Question(45, "Loop `for(int i = 0; i < 5; i++)` akan melakukan iterasi sebanyak...", listOf("4 kali", "5 kali", "6 kali", "Tak terbatas"), 1),
            Question(46, "Apa outputnya? `int i=5; do{ System.out.print(i--); } while(i>5);`", listOf("5", "4", "Tidak ada output", "Infinite loop"), 0),
            Question(47, "Kapan sebaiknya menggunakan `for` loop daripada `while` loop?", listOf("Saat jumlah iterasi sudah diketahui sebelumnya", "Saat kondisi berhenti tidak pasti", "Saat loop harus berjalan minimal sekali", "Tidak pernah, `while` selalu lebih baik"), 0),
            Question(48, "Apa yang salah dengan loop ini? `for(double d=0.0; d!=1.0; d+=0.1){...}`", listOf("Tidak ada yang salah", "Increment tidak valid", "Perbandingan `double` dengan `==` atau `!=` bisa tidak akurat", "Kondisi tidak valid"), 2),
            Question(49, "Mengubah variabel loop di dalam `for-each` loop...", listOf("Akan mengubah elemen asli di array/koleksi", "Tidak akan mengubah elemen asli (jika primitif)", "Akan menyebabkan error", "Selalu mengubah elemen asli"), 1),
            Question(50, "Apa outputnya? `for(int i=0; i<5; i++) if(i==2) break; System.out.print(i);`", listOf("01", "012", "0134", "Error, `i` tidak terdefinisi di luar loop"), 3)
        )
    }
}